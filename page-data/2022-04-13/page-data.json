{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2022-04-13/",
    "result": {"data":{"site":{"siteMetadata":{"title":"HyoungMin's mini-log"}},"markdownRemark":{"id":"d170166f-2617-5335-bfeb-cda1017640c5","excerpt":"JavaScript 이해 Review 으로 버전 관리하는 것은 좋지 않다. 데이터베이스의 중요한 정보가 버전 관리 될 수 있기 때문이다. 결국, 하나하나 파일을 확인하고 Staging하여 Commit해야 한다.(ignore…","html":"<h2>JavaScript 이해</h2>\n<h3>Review</h3>\n<p><code class=\"language-text\">git add .</code>으로 버전 관리하는 것은 좋지 않다. 데이터베이스의 중요한 정보가 버전 관리 될 수 있기 때문이다. 결국, 하나하나 파일을 확인하고 Staging하여 Commit해야 한다.(ignore 필요)\r\n<code class=\"language-text\">git commit -a \"message\"</code>: 한 번은 명확하게 <code class=\"language-text\">add</code>해야 활용할 수 있는 옵션으로, 자동으로 <code class=\"language-text\">add</code> 하게 하는 옵션이다.\r\nVSCode의 동기화는 <code class=\"language-text\">pull</code> 한 후 <code class=\"language-text\">push</code>하는 방식이다.</p>\n<h4>버그 탐색을 위한 Binary Search</h4>\n<p>전체의 절반만 탐색하는 방식.</p>\n<h4><code class=\"language-text\">...</code> BTN 구현하기</h4>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/button\"><code class=\"language-text\">&lt;input type=button /></code></a>\r\n<a href=\"https://developer.mozilla.org/ko/docs/Web/HTML/Element/span\"><code class=\"language-text\">&lt;span></code></a>\r\n<a href=\"https://developer.mozilla.org/ko/docs/Web/API/Document/getElementById\"><code class=\"language-text\">document.getElementById('hidden')</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\r\n  JavaScript is\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span>\r\n    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> grey<span class=\"token punctuation\">;</span> <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 5px<span class=\"token punctuation\">;</span> <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span>\r\n    <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\r\n      if (this.display !== <span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span>) {\r\n        this.style.display=<span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span>;\r\n        document.getElementById(<span class=\"token punctuation\">'</span>hidden<span class=\"token punctuation\">'</span>).style.display=<span class=\"token punctuation\">'</span>inline<span class=\"token punctuation\">'</span>;\r\n      } else {\r\n        this.style.display=<span class=\"token punctuation\">'</span>inline<span class=\"token punctuation\">'</span>;\r\n        document.getElementById(<span class=\"token punctuation\">'</span>hidden<span class=\"token punctuation\">'</span>).style.display=<span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span>;\r\n      }\r\n    <span class=\"token punctuation\">\"</span></span></span>\r\n  <span class=\"token punctuation\">></span></span>\r\n    ...\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\r\n    a programming language that is one of the core technologies of the World Wide Web, alongside HTML and CSS.\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Element/innerHTML\"><code class=\"language-text\">innerHTML</code></a>: 내부의 텍스트를 포함해 태그 등 다른 것도 가져온다\r\n<a href=\"https://developer.mozilla.org/ko/docs/Web/API/HTMLElement/innerText\"><code class=\"language-text\">innerText</code></a>: 내부의 텍스트만 가져오지, 태그 등 이외의 것을 가져올 수 없다.\r\n특정 웹 페이지에서 <code class=\"language-text\">document.querySelector('body').innerText</code>를 통해 모든 텍스트를 가져올 수 있다.\r\n<a href=\"https://developer.mozilla.org/ko/docs/Web/API/Document/querySelector\"><code class=\"language-text\">document.querySelector()</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\r\n  JavaScript is\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span>\r\n    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> grey<span class=\"token punctuation\">;</span> <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 5px<span class=\"token punctuation\">;</span> <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span>\r\n    <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\r\n      if (this.display !== <span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span>) {\r\n        this.style.display=<span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span>;\r\n        document.getElementById(<span class=\"token punctuation\">'</span>content<span class=\"token punctuation\">'</span>).innerHTML =`a programming language that is one of the core technologies of the World Wide Web, alongside HTML and CSS.`;\r\n      } else {\r\n        this.style.display=<span class=\"token punctuation\">'</span>inline<span class=\"token punctuation\">'</span>;\r\n        document.getElementById(<span class=\"token punctuation\">'</span>content<span class=\"token punctuation\">'</span>).innerHTML=<span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span>;\r\n      }\r\n    <span class=\"token punctuation\">\"</span></span></span>\r\n  <span class=\"token punctuation\">></span></span>\r\n    ...\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3><a href=\"https://www.w3schools.com/js/js_arrays.asp\">Array</a></h3>\n<p>서로 연관된 데이터를 모아서 그룹핑한 후에 이름을 붙인것이 배열이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> contents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'HTML'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CSS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'James'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jordan'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> scores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>배열 조회</h4>\n<p><code class=\"language-text\">elements</code>의 <code class=\"language-text\">index</code>를 활용해 배열 <code class=\"language-text\">elements</code>의 값을 조회할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// HTML</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Jordan</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 20</span></code></pre></div>\n<h4>배열 길이 출력</h4>\n<p><code class=\"language-text\">length</code> method를 활용해 배열의 길이를 출력할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 3</span></code></pre></div>\n<h4>배열 데이터 추가</h4>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/push\">참고 - MDN</a>\r\n<code class=\"language-text\">push(value)</code> method를 활용해 배열의 맨 마지막에 <code class=\"language-text\">elements</code>를 추가하고, 해당 배열의 길이(<code class=\"language-text\">arr.length</code>)를 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">contents<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"React.JS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3><a href=\"https://www.w3schools.com/js/js_loop_for.asp\">Loop - <code class=\"language-text\">for</code> 문</a></h3>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/for\">참고</a></p>\n<blockquote>\n<p>for (초기값; Boolean(반복 조건); 증감) { 동작문 }</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token number\">1</span>\r\n<span class=\"token number\">2</span>\r\n<span class=\"token number\">3</span>\r\n<span class=\"token number\">2</span>\r\n<span class=\"token number\">3</span>\r\n<span class=\"token number\">2</span>\r\n<span class=\"token number\">3</span>\r\n<span class=\"token number\">4</span></code></pre></div>\n<p><a href=\"https://ko.javascript.info/debugging-chrome\"><code class=\"language-text\">debugger</code></a>를 활용해서 한 줄씩 코드를 실행할 수 있다.</p>\n<h3>Array와 Loop</h3>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Document/write\"><code class=\"language-text\">document.write()</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> members<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;li>'</span> <span class=\"token operator\">+</span> members<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/li>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>덮어쓰기 되어 원하는 결과가 나오지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\r\n  <span class=\"token keyword\">let</span> contents<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'js'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>contents<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> &lt;/li></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></code></pre></div>\n<p>수정</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\r\n  <span class=\"token keyword\">let</span> tag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">let</span> contents<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'js'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>contents<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    tag <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> &lt;/li></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> tag<span class=\"token punctuation\">;</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">git reset --hard</code>로 복구\r\n<code class=\"language-text\">; git push</code> 커밋 후 바로 push</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Document/querySelectorAll\"><code class=\"language-text\">document.querySelectorAll()</code></a></p>\n<h3><a href=\"https://www.w3schools.com/js/js_functions.asp\">Function</a></h3>\n<p>함수는 서로 연관된 코드를 그룹핑해서 이름을 붙인 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token operator\">*</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">let</span> price <span class=\"token operator\">=</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> tax_rate <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>price <span class=\"token operator\">*</span> tax_rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">calc_tax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">let</span> price <span class=\"token operator\">=</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">let</span> tax_rate <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>price <span class=\"token operator\">*</span> tax_rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token function\">calc_tax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>함수의 입력</h4>\n<p>함수는 입력 값(parameter?)에 따라서 다른 값을 반환한다.</p>\n<p>입력 값의 기본 값을 설정할 수 있다.</p>\n<h4>함수의 출력</h4>\n<p>return 키워드를 통해 반환(출력) 값을 설정할 수 있다.</p>","frontmatter":{"title":"[Elice SW 2기] mini-log #008 : JavaScript의 이해 3","date":"April 13, 2022","description":"Elice, SW, WEB, Frontend, Bootcamp, 이고잉, HTML, CSS, JavaScript, CodingTest, DOM, event"}},"previous":{"fields":{"slug":"/2022-04-12/"},"frontmatter":{"title":"[Elice SW 2기] mini-log #007 : JavaScript의 이해 2"}},"next":{"fields":{"slug":"/2022-04-14/"},"frontmatter":{"title":"[Elice SW 2기] mini-log #009 : DOM과 이벤트의 이해"}}},"pageContext":{"id":"d170166f-2617-5335-bfeb-cda1017640c5","previousPostId":"2222726f-74c8-5e93-b9c0-0838cd8a0ddb","nextPostId":"b8b43083-a94e-53b8-b0e9-a3bce5d66281"}},
    "staticQueryHashes": ["2841359383","3257411868"]}